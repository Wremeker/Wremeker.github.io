{"version":3,"sources":["serviceWorker.js","store/rootReducer.js","constants/actionTypes.js","store/index.js","constants/apiKey.js","actions/initCurrency.js","actions/addCurrency.js","components/CurrencyIcons.js","actions/deleteCurrency.js","actions/updateCurrency.js","components/UpdateIcon.js","components/RemoveIcon.js","components/CurrencyItem.js","actions/dragCurrency.js","components/reorderCurrency.js","components/CurrencyItems.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","currency","persistedReducer","arguments","length","undefined","action","type","Object","objectSpread","EUR","data","filter","item","timestamp","concat","name","map","persistConfig","key","storage","persistReducer","rootReducer","store","createStore","combineReducers","applyMiddleware","thunk","persistor","persistStore","API_KEY","initCurrency","dispatch","axios","get","res","addCurrency","value","currencyIcons","CurrencyIcons","_ref","props","esm_extends","react_default","a","createElement","className","index","onClick","deleteCurrency","upDateCurrency","UpdateIcon","version","id","xmlns","width","height","viewBox","fill","style","cursor","position","right","top","d","RemoveIcon","x","y","CurrencyItem","e","this","quotes","rates","entries","count","slice","firstCurrency","components_UpdateIcon","updateCurrency","bind","components_RemoveIcon","Component","connect","dragCurrency","reorderCurrency","list","startIndex","endIndex","result","Array","from","_result$splice","splice","removed","slicedToArray","CurrencyItems","onDragEnd","destination","_this","items","source","_this2","react","react_beautiful_dnd_esm","droppableId","provided","snapshot","ref","innerRef","draggableId","assign","draggableProps","dragHandleProps","components_CurrencyItem","App","target","innerHTML","Date","now","toString","components_CurrencyIcons","handleClick","eurCurrency","components_CurrencyItems","ReactDOM","render","es","integration_react","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oNAYMA,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,gHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,6DCvF3DC,EAAe,CACjBC,SAAU,IAyDCC,EAtDiB,WAAkC,IAAjCV,EAAiCW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,EAAcM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,MCdyB,kBDcrBC,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EADP,CAEIkB,IAAKJ,EAAOK,OCdK,kBDkBrBL,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EADP,CAEIS,SAAUK,EAAOK,OCtBE,oBD0BvBL,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EADP,CAEIS,SAAUT,EAAMS,SAASW,OAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAcR,EAAOQ,cC9BlD,iBDkCpBR,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EADP,CAEIS,SAAUT,EAAMS,SAASc,OAAO,CAC5BJ,KAAML,EAAOK,KACbK,KAAMV,EAAOU,KACbF,UAAWR,EAAOQ,cCpCH,oBDyCvBR,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EADP,CAEIS,SAAUT,EAAMS,SAASgB,IAAI,SAAAJ,GAIzB,OAHIP,EAAOQ,YAAcD,EAAKC,YAC1BD,EAAKF,KAAOL,EAAOK,MAEhBE,MCjDO,mBDsDtBP,EAAOC,KACAC,OAAAC,EAAA,EAAAD,CAAA,GACAhB,EACAc,GAGJd,GE1DL0B,EAAgB,CAClBC,IAAK,OACLC,aAGElB,EAAmBmB,YAAeH,EAAeI,GAE1CC,EAAQC,YAAYC,YAAgB,CAC7CvB,qBACAwB,YAAgBC,MAEPC,EAAYC,YAAaN,2CCfvBO,EAFQ,oDCoBRC,EAhBa,kBAAM,SAAAC,GAC9BC,IAAMC,IAAN,+CAAAnB,OAAyDe,IAAW5C,KAAK,SAAAiD,GACrEH,EAAS,CACLzB,KHPiB,gBGQjBI,KAAMwB,EAAIxB,KACVZ,OAAO,MAEZD,MAAM,SAAAC,GACLiC,EAAS,CACLzB,KHTkB,iBGUlBI,KAAMZ,EACNA,OAAO,QCOJqC,EAlBY,SAACzB,GAAD,OAAU,SAAAqB,GACjCC,IAAMC,IAAN,4CAAAnB,OAAsDe,EAAtD,gBAAAf,OAA4EJ,EAAK0B,QAASnD,KAAK,SAAAiD,GAC3FH,EAAS,CACLzB,KJNgB,eIOhBI,KAAMwB,EAAIxB,KACVK,KAAML,EAAK0B,MACXvB,UAAWH,EAAKG,UAChBf,OAAO,MAEZD,MAAM,SAAAC,GACLiC,EAAS,CACLzB,KJXkB,iBIYlBI,KAAMZ,EACNA,OAAO,gBCfNuC,EAAgB,CACzB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAaWC,EAVc,SAAAC,GAAA,IAAMC,EAANjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAAgC,GAAA,OACzBG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEPR,EAAcrB,IAAI,SAACJ,EAAMkC,GAAP,OACdJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiB3B,IAAK4B,EAAOC,QAASP,EAAMO,SAAUnC,OCZvEoC,EAPe,SAACtC,GAC3B,MAAO,CACHJ,KNFuB,kBMGvBO,UAAWH,ICiBJuC,EAlBe,SAACvC,GAAD,OAAU,SAAAqB,GACpCC,IAAMC,IAAN,4CAAAnB,OAAsDe,EAAtD,gBAAAf,OAA4EJ,EAAK0B,QAASnD,KAAK,SAAAiD,GAC3FH,EAAS,CACLzB,KPFmB,kBOGnBI,KAAMwB,EAAIxB,KACVK,KAAML,EAAK0B,MACXvB,UAAWH,EAAKG,UAChBf,OAAO,MAEZD,MAAM,SAAAC,GACLiC,EAAS,CACLzB,KPXkB,iBOYlBI,KAAMZ,EACNA,OAAO,QCmBJoD,EAjCW,SAAAX,GAAA,IAAKC,EAALjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAAgC,GAAA,OAClBG,EAAAC,EAAAC,cAAA,OACIO,QAAQ,MACRC,GAAG,SACHC,MAAM,6BACNC,MAAM,OACNC,OAAO,OACPC,QAAQ,sBACRC,KAAK,OACLV,QAASP,EAAMO,QACfW,MAAO,CACHC,OAAQ,UACRC,SAAU,WACVC,MAAO,OACPC,IAAK,QAGbpB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMmB,EAAE,wdAIRrB,EAAAC,EAAAC,cAAA,QAAMmB,EAAE,kfCCTC,EAzBW,SAAAzB,GAAA,IAAMC,EAANjC,OAAAkC,EAAA,EAAAlC,CAAA,GAAAgC,GAAA,OACtBG,EAAAC,EAAAC,cAAA,OACIS,MAAM,6BACNI,KAAK,OACLN,QAAQ,MACRC,GAAG,SACHa,EAAE,MACFC,EAAE,MACFV,QAAQ,oBACRF,MAAM,OACNC,OAAO,OACPR,QAASP,EAAMO,QACfW,MAAO,CACHC,OAAQ,UACRC,SAAU,WACVC,MAAO,OACPC,IAAK,QAGTpB,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,QAAMmB,EAAE,2bAA2bN,KAAK,eCf9cU,yLACWC,GACbC,KAAK7B,MAAMQ,eAAeqB,KAAK7B,MAAM3B,kDAExBuD,GACbC,KAAK7B,MAAMS,eAAe,CACxBb,MAAOiC,KAAK7B,MAAMzB,KAClBF,UAAWwD,KAAK7B,MAAM3B,6CAGjB,IACCyD,EAAWD,KAAK7B,MAAM9B,KAAtB4D,OACFC,EAAQhE,OAAOiE,QAAQF,GAC7B,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBwB,KAAK7B,MAAMiC,MAAnD,KAEEF,EAAQA,EAAMG,MAAM,EAAG,GAAG1D,IAAI,SAACJ,EAAMkC,GACnC,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB3B,IAAK4B,GACxCJ,EAAAC,EAAAC,cAAA,YAAOhC,EAAK,GAAZ,MACA8B,EAAAC,EAAAC,cAAA,YAAOhC,EAAK,OAGb,GAGLyD,KAAK7B,MAAMmC,cAAgB,GACzBjC,EAAAC,EAAAC,cAACgC,EAAD,CACE7B,QAASsB,KAAKQ,eAAeC,KAAKT,QAKtCA,KAAK7B,MAAMmC,cAAgB,GACzBjC,EAAAC,EAAAC,cAACmC,EAAD,CACEhC,QAASsB,KAAKrB,eAAe8B,KAAKT,gBApCrBW,aA0DZC,cAbS,SAAA1F,GAAK,MAAK,IAEP,SAAAwC,GACzB,MAAO,CACLiB,eAAgB,SAAAnC,GACdkB,EAASiB,EAAenC,KAE1BoC,eAAgB,SAAAvC,GACdqB,EAASkB,EAAevC,OAKfuE,CAA6Cd,WCxD7Ce,EAPa,SAACxE,GACzB,MAAO,CACHJ,KXDqB,gBWErBI,KAAMA,aCECyE,EAPgB,SAACC,EAAMC,EAAYC,GAC9C,IAAMC,EAASC,MAAMC,KAAKL,GADiCM,EAEzCH,EAAOI,OAAON,EAAY,GAArCO,EAFoDrF,OAAAsF,EAAA,EAAAtF,CAAAmF,EAAA,MAI3D,OADAH,EAAOI,OAAOL,EAAU,EAAGM,GACpBL,GCILO,6MACFC,UAAY,SAAAR,GACR,GAAKA,EAAOS,aAGRC,EAAKzD,MAAMxC,SAAU,CACrB,IAAMkG,EAAQf,EACVc,EAAKzD,MAAMxC,SACXuF,EAAOY,OAAOrD,MACdyC,EAAOS,YAAYlD,OAEvBmD,EAAKzD,MAAM0C,aAAagB,6EAGvB,IAAAE,EAAA/B,KACL,OACI3B,EAAAC,EAAAC,cAACyD,EAAA,SAAD,KACI3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAiBP,UAAW1B,KAAK0B,WAC7BrD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAWC,YAAY,aAEf,SAACC,EAAUC,GAAX,OACI/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB6D,IAAKF,EAASG,UAEvCP,EAAK5D,MAAMxC,SAAWoG,EAAK5D,MAAMxC,SAASgB,IAAI,SAACJ,EAAMkC,GACjD,OACIJ,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAWpF,IAAK4B,EAAO8D,YAAahG,EAAKC,UAAWiC,MAAOA,GACtD,SAAC0D,EAAUC,GAAX,OACG/D,EAAAC,EAAAC,cAAA,MAAArC,OAAAsG,OAAA,CACIH,IAAKF,EAASG,UACVH,EAASM,eACTN,EAASO,iBAEbrE,EAAAC,EAAAC,cAACoE,EAAD,CACI9F,IAAK4B,EACL2B,MAAO3B,EAAQ,EACfpC,KAAME,EAAKF,KACXiE,eAAe,EACf5D,KAAMH,EAAKG,KACXF,UAAWD,EAAKC,iBAOnC,eA7CjBmE,aAuEbC,cAdS,SAAA1F,GACpB,MAAO,CACHS,SAAUT,EAAMU,iBAAiBD,WAId,SAAA+B,GACvB,MAAO,CACHmD,aAAc,SAAAxE,GACVqB,EAASmD,EAAaxE,OAKnBuE,CAA6Ca,GCtEtDmB,sMAEF5C,KAAK7B,MAAMV,mDAEDsC,GACVC,KAAK7B,MAAML,YAAY,CACrBC,MAAOgC,EAAE8C,OAAOC,UAChBtG,UAAWuG,KAAKC,MAAMC,8CAIxB,OACE5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,+IAEFF,EAAAC,EAAAC,cAAC2E,EAAD,CAAexE,QAASsB,KAAKmD,YAAY1C,KAAKT,QAE5CA,KAAK7B,MAAMiF,YACT/E,EAAAC,EAAAC,cAACoE,EAAD,CACEvC,MAAM,IACN/D,KAAM2D,KAAK7B,MAAMiF,YACjB9C,eAAe,IAEf,GAENjC,EAAAC,EAAAC,cAAC8E,EAAD,cA1BU1C,cAkDHC,cAlBS,SAAA1F,GACtB,MAAO,CACLkI,YAAalI,EAAMU,iBAAiBQ,IACpCT,SAAUT,EAAMU,iBAAiBD,WAIV,SAAA+B,GACzB,MAAO,CACLD,aAAc,WACZC,EAASD,MAEXK,YAAa,SAAAzB,GACXqB,EAASI,EAAYzB,OAKZuE,CAA6CgC,UClD5DU,IAASC,OACLlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAUvG,MAAOA,GACboB,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAanG,UAAWA,GACpBe,EAAAC,EAAAC,cAACmF,EAAD,QAGNC,SAASC,eAAe,SjBOvB,SAAkBpJ,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoJ,IAAIC,GAAwB5J,OAAOC,SAAS4J,MACpDC,SAAW9J,OAAOC,SAAS6J,OAIvC,OAGF9J,OAAO+J,iBAAiB,OAAQ,WAC9B,IAAM1J,EAAK,GAAAkC,OAAMqH,GAAN,sBAEP9J,GAgEV,SAAiCO,EAAOC,GAEtC0J,MAAM3J,GACHK,KAAK,SAAAuJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQzG,IAAI,gBAEnB,MAApBuG,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C9J,UAAUC,cAAc8J,MAAM5J,KAAK,SAAAC,GACjCA,EAAa4J,aAAa7J,KAAK,WAC7BV,OAAOC,SAASuK,aAKpBpK,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAsJ,CAAwBpK,EAAOC,GAI/BC,UAAUC,cAAc8J,MAAM5J,KAAK,WACjCQ,QAAQC,IACN,+GAMJf,EAAgBC,EAAOC,MiBjC/BE","file":"static/js/main.97d26dac.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    INIT_CURRENCY,\r\n    DELETE_CURRENCY,\r\n    ADD_CURRENCY,\r\n    DRAG_CURRENCY,\r\n    ERROR_CURRENCY,\r\n    UPDATE_CURRENCY\r\n} from './../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    currency: []\r\n};\r\n\r\nexport const persistedReducer = (state = initialState, action) => {\r\n    if (action.type === INIT_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            EUR: action.data\r\n        }\r\n    }\r\n\r\n    if (action.type === DRAG_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            currency: action.data\r\n        }\r\n    }\r\n\r\n    if (action.type === DELETE_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            currency: state.currency.filter(item => item.timestamp !== action.timestamp)\r\n        }\r\n    }\r\n    \r\n    if (action.type === ADD_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            currency: state.currency.concat({\r\n                data: action.data,\r\n                name: action.name,\r\n                timestamp: action.timestamp\r\n            })\r\n        }\r\n    }\r\n\r\n    if (action.type === UPDATE_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            currency: state.currency.map(item => {\r\n                if (action.timestamp === item.timestamp) {\r\n                    item.data = action.data;\r\n                }\r\n                return item;\r\n            })\r\n        }\r\n    }\r\n    \r\n    if (action.type === ERROR_CURRENCY) {\r\n        return {\r\n            ...state,\r\n            ...action,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default persistedReducer;","export const INIT_CURRENCY = 'INIT_CURRENCY';\r\nexport const ADD_CURRENCY = 'ADD_CURRENCY';\r\nexport const DELETE_CURRENCY = 'DELETE_CURRENCY';\r\nexport const DRAG_CURRENCY = 'DRAG_CURRENCY';\r\nexport const ERROR_CURRENCY = 'ERROR_CURRENCY'; \r\nexport const UPDATE_CURRENCY = 'UPDATE_CURRENCY'; \r\n\r\nexport default {\r\n    INIT_CURRENCY,\r\n    ADD_CURRENCY,\r\n    DELETE_CURRENCY,\r\n    DRAG_CURRENCY,\r\n    ERROR_CURRENCY,\r\n    UPDATE_CURRENCY\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = createStore(combineReducers({\r\n    persistedReducer\r\n}), applyMiddleware(thunk));\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default {\r\n    persistor,\r\n    store\r\n};\r\n","export const API_KEY = 'd40a69446f16dc8de757854b846b8ace';\r\n\r\nexport default API_KEY;\r\n\r\n","import { INIT_CURRENCY, ERROR_CURRENCY } from './../constants/actionTypes';\r\nimport API_KEY from './../constants/apiKey';\r\nimport axios from 'axios';\r\n\r\nexport const initCurrency = () => dispatch => {\r\n    axios.get(`http://www.apilayer.net/api/live?access_key=${API_KEY}`).then(res => {\r\n        dispatch({\r\n            type: INIT_CURRENCY,\r\n            data: res.data,\r\n            error: false\r\n        });\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: ERROR_CURRENCY,\r\n            data: error,\r\n            error: true\r\n        })\r\n    });\r\n}\r\n\r\nexport default initCurrency;","import { ADD_CURRENCY, ERROR_CURRENCY } from './../constants/actionTypes';\r\nimport API_KEY from './../constants/apiKey';\r\nimport axios from 'axios';\r\n\r\nexport const addCurrency = (data) => dispatch => {\r\n    axios.get(`http://data.fixer.io/api/live?access_key=${API_KEY}&currencies=${data.value}`).then(res => {\r\n        dispatch({\r\n            type: ADD_CURRENCY,\r\n            data: res.data,\r\n            name: data.value,\r\n            timestamp: data.timestamp,\r\n            error: false,\r\n        });\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: ERROR_CURRENCY,\r\n            data: error,\r\n            error: true\r\n        });\r\n    })\r\n}\r\n\r\nexport default addCurrency;\r\n","import React from 'react';\r\n\r\nexport const currencyIcons = [\r\n    'CLP',\r\n    'RUB',\r\n    'BTN',\r\n    'ARS',\r\n    'AWG',\r\n    'AZN',\r\n    'BAM',\r\n    'BZD',\r\n    'CAD',\r\n    'CLF',\r\n    'CNY',\r\n    'BRL'\r\n];\r\n\r\nexport const CurrencyIcons = ({ ...props }) => (\r\n    <div className=\"currency-app__add\">\r\n        {\r\n            currencyIcons.map((item, index) => (\r\n                <span className=\"currency__icon\" key={index} onClick={props.onClick}>{item}</span>\r\n            ))\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default CurrencyIcons;","import { DELETE_CURRENCY } from './../constants/actionTypes';\r\n\r\nexport const deleteCurrency = (data) => {\r\n    return {\r\n        type: DELETE_CURRENCY,\r\n        timestamp: data\r\n    }\r\n}\r\n\r\nexport default deleteCurrency;","import { UPDATE_CURRENCY, ERROR_CURRENCY } from './../constants/actionTypes';\r\nimport API_KEY from './../constants/apiKey';\r\nimport axios from 'axios';\r\n\r\nexport const upDateCurrency = (data) => dispatch => {\r\n    axios.get(`http://data.fixer.io/api/live?access_key=${API_KEY}&currencies=${data.value}`).then(res => {\r\n        dispatch({\r\n            type: UPDATE_CURRENCY,\r\n            data: res.data,\r\n            name: data.value,\r\n            timestamp: data.timestamp,\r\n            error: false,\r\n        });\r\n    }).catch(error => {\r\n        dispatch({\r\n            type: ERROR_CURRENCY,\r\n            data: error,\r\n            error: true\r\n        });\r\n    })\r\n}\r\n\r\nexport default upDateCurrency;\r\n","import React from 'react';\r\n\r\n\r\nexport const UpdateIcon = ({...props}) => (\r\n        <svg \r\n            version=\"1.1\" \r\n            id=\"Capa_1\" \r\n            xmlns=\"http://www.w3.org/2000/svg\" \r\n            width=\"20px\"\r\n            height=\"20px\"\r\n            viewBox=\"0 0 489.711 489.711\" \r\n            fill=\"#fff\"\r\n            onClick={props.onClick}\r\n            style={{\r\n                cursor: 'pointer',\r\n                position: 'absolute',\r\n                right: '60px',\r\n                top: '40%'\r\n            }}\r\n        >\r\n        <g>\r\n            <g>\r\n                <path d=\"M112.156,97.111c72.3-65.4,180.5-66.4,253.8-6.7l-58.1,2.2c-7.5,0.3-13.3,6.5-13,14c0.3,7.3,6.3,13,13.5,13\r\n                c0.2,0,0.3,0,0.5,0l89.2-3.3c7.3-0.3,13-6.2,13-13.5v-1c0-0.2,0-0.3,0-0.5v-0.1l0,0l-3.3-88.2c-0.3-7.5-6.6-13.3-14-13\r\n                c-7.5,0.3-13.3,6.5-13,14l2.1,55.3c-36.3-29.7-81-46.9-128.8-49.3c-59.2-3-116.1,17.3-160,57.1c-60.4,54.7-86,137.9-66.8,217.1\r\n                c1.5,6.2,7,10.3,13.1,10.3c1.1,0,2.1-0.1,3.2-0.4c7.2-1.8,11.7-9.1,9.9-16.3C36.656,218.211,59.056,145.111,112.156,97.111z\"/>\r\n                <path d=\"M462.456,195.511c-1.8-7.2-9.1-11.7-16.3-9.9c-7.2,1.8-11.7,9.1-9.9,16.3c16.9,69.6-5.6,142.7-58.7,190.7\r\n                c-37.3,33.7-84.1,50.3-130.7,50.3c-44.5,0-88.9-15.1-124.7-44.9l58.8-5.3c7.4-0.7,12.9-7.2,12.2-14.7s-7.2-12.9-14.7-12.2l-88.9,8\r\n                c-7.4,0.7-12.9,7.2-12.2,14.7l8,88.9c0.6,7,6.5,12.3,13.4,12.3c0.4,0,0.8,0,1.2-0.1c7.4-0.7,12.9-7.2,12.2-14.7l-4.8-54.1\r\n                c36.3,29.4,80.8,46.5,128.3,48.9c3.8,0.2,7.6,0.3,11.3,0.3c55.1,0,107.5-20.2,148.7-57.4\r\n                C456.056,357.911,481.656,274.811,462.456,195.511z\"/>\r\n            </g>\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport default UpdateIcon;","import React from 'react';\r\n\r\nexport const RemoveIcon = ({ ...props }) => (\r\n    <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"#fff\"\r\n        version=\"1.1\"\r\n        id=\"Capa_1\"\r\n        x=\"0px\"\r\n        y=\"0px\"\r\n        viewBox=\"0 0 47.971 47.971\"\r\n        width=\"16px\"\r\n        height=\"16px\"\r\n        onClick={props.onClick}\r\n        style={{\r\n            cursor: 'pointer',\r\n            position: 'absolute',\r\n            right: '20px',\r\n            top: '40%'\r\n        }}\r\n    >\r\n        <g>\r\n            <path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#FFFFFF\" />\r\n        </g>\r\n    </svg>\r\n)\r\n\r\nexport default RemoveIcon;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport deleteCurrency from './../actions/deleteCurrency';\r\nimport upDateCurrency from './../actions/updateCurrency';\r\nimport UpdateIcon from './UpdateIcon';\r\nimport RemoveIcon from './RemoveIcon';\r\n\r\nclass CurrencyItem extends Component {\r\n  deleteCurrency(e) {\r\n    this.props.deleteCurrency(this.props.timestamp);\r\n  }\r\n  updateCurrency(e) {\r\n    this.props.upDateCurrency({\r\n      value: this.props.name,\r\n      timestamp: this.props.timestamp\r\n    });\r\n  }\r\n  render() {\r\n    const { quotes } = this.props.data;\r\n    const rates = Object.entries(quotes);\r\n    return (\r\n      <div className=\"currency-item\">\r\n        <span className=\"currency-item__count\">{this.props.count}.</span>\r\n        {\r\n          rates ? rates.slice(0, 5).map((item, index) => {\r\n            return (\r\n              <div className=\"currency-item__rate\" key={index}>\r\n                <span>{item[0]}: </span>\r\n                <span>{item[1]}</span>\r\n              </div>\r\n            )\r\n          }) : ''\r\n        }\r\n        {\r\n          this.props.firstCurrency ? '' : (\r\n            <UpdateIcon\r\n              onClick={this.updateCurrency.bind(this)}\r\n            />\r\n          )\r\n        }\r\n        {\r\n          this.props.firstCurrency ? '' : (\r\n            <RemoveIcon\r\n              onClick={this.deleteCurrency.bind(this)}\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteCurrency: timestamp => {\r\n      dispatch(deleteCurrency(timestamp));\r\n    },\r\n    upDateCurrency: data => {\r\n      dispatch(upDateCurrency(data))\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyItem);\r\n\r\n","import { DRAG_CURRENCY } from './../constants/actionTypes';\r\n\r\nexport const dragCurrency = (data) => {\r\n    return {\r\n        type: DRAG_CURRENCY,\r\n        data: data\r\n    }\r\n}\r\n\r\nexport default dragCurrency;","export const reorderCurrency = (list, startIndex, endIndex) => {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\nexport default reorderCurrency;","import React, { Component, Fragment } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { connect } from 'react-redux';\r\nimport dragCurrency from './../actions/dragCurrency';\r\nimport reorderCurrency from './reorderCurrency';\r\nimport CurrencyItem from './CurrencyItem';\r\n\r\n\r\nclass CurrencyItems extends Component {\r\n    onDragEnd = result => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        if (this.props.currency) {\r\n            const items = reorderCurrency(\r\n                this.props.currency,\r\n                result.source.index,\r\n                result.destination.index\r\n            );\r\n            this.props.dragCurrency(items);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <DragDropContext onDragEnd={this.onDragEnd}>\r\n                    <Droppable droppableId=\"droppable\">\r\n                        {\r\n                            (provided, snapshot) => (\r\n                                <div className=\"currency__items\" ref={provided.innerRef}>\r\n                                    {\r\n                                        this.props.currency ? this.props.currency.map((item, index) => {\r\n                                            return (\r\n                                                <Draggable key={index} draggableId={item.timestamp} index={index}>\r\n                                                    {(provided, snapshot) => (\r\n                                                        <div\r\n                                                            ref={provided.innerRef}\r\n                                                            {...provided.draggableProps}\r\n                                                            {...provided.dragHandleProps}\r\n                                                        >\r\n                                                            <CurrencyItem\r\n                                                                key={index}\r\n                                                                count={index + 2}\r\n                                                                data={item.data}\r\n                                                                firstCurrency={false}\r\n                                                                name={item.name}\r\n                                                                timestamp={item.timestamp}\r\n                                                            />\r\n                                                        </div>\r\n                                                    )}\r\n                                                </Draggable>\r\n\r\n                                            )\r\n                                        }) : ''\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currency: state.persistedReducer.currency\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        dragCurrency: data => {\r\n            dispatch(dragCurrency(data))\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrencyItems);\r\n\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport initCurrency from './actions/initCurrency';\nimport addCurrency from './actions/addCurrency';\nimport CurrencyIcons from './components/CurrencyIcons';\nimport CurrencyItem from './components/CurrencyItem';\nimport CurrencyItems from './components/CurrencyItems';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initCurrency();\n  }\n  handleClick(e) {\n    this.props.addCurrency({\n      value: e.target.innerHTML,\n      timestamp: Date.now().toString()\n    })\n  }\n  render() {\n    return (\n      <div className=\"currency-app\">\n        <div className=\"currency-app__title\">\n          <h1>Валютное веб приложение</h1>\n        </div>\n        <CurrencyIcons onClick={this.handleClick.bind(this)} />\n        {\n          this.props.eurCurrency ? (\n            <CurrencyItem\n              count=\"1\"\n              data={this.props.eurCurrency}\n              firstCurrency={true}\n            />\n          ) : ''\n        }\n        <CurrencyItems />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    eurCurrency: state.persistedReducer.EUR,\n    currency: state.persistedReducer.currency\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initCurrency: () => {\n      dispatch(initCurrency());\n    },\n    addCurrency: data => {\n      dispatch(addCurrency(data));\n    },\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport { store, persistor } from './store/index';\nimport App from './App';\nimport '@babel/polyfill';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}