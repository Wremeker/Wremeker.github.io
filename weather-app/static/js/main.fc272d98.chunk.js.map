{"version":3,"sources":["reducers/rootReducer.js","components/ShowWeather/ShowWeather.js","actions/deleteCity.js","constants/actionTypes.js","components/AddCity/TextFieldStyles.js","actions/getOutherWeather.js","components/AddCity/AddCity.js","components/ShowWeatherCities/ShowWeatherCities.js","actions/getCurrentWeather.js","App.js","index.js"],"names":["initialState","cities","timestamps","ShowWeather","this","props","deleteCity","timestamp","_this$props","name","country","region","_this$props2","temp_c","temp_f","isLocation","react_default","a","createElement","className","Button_default","variant","color","onClick","handleClick","bind","Component","connect","state","dispatch","data","type","styles","textField","minWidth","label","fontSize","input","padding","inputFocused","background","labelFocused","button","marginLeft","marginTop","getOutherWeather","axios","get","concat","city","then","res","Object","objectSpread","AddCity","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSity","e","rusRegExp","inputValue","target","value","search","replace","setState","key","trim","addWeather","Date","now","toString","classes","TextField_default","id","placeholder","autoFocus","onChange","handleChange","onKeyPress","handeKeyPress","InputProps","root","focused","InputLabelProps","withStyles","ShowWeatherCities","react","reverse","map","item","index","_item$location","location","_item$current","current","components_ShowWeather_ShowWeather","persistedReducer","filter","every","element","getCurrentWeather","getCurrentLocation","getlocation","navigator","geolocation","Promise","resolve","reject","Error","getCurrentPosition","position","getLocation","lat","coords","latitude","long","longitude","error","App","getWeather","weather","_this$props$weather$l","_this$props$weather$c","components_AddCity_AddCity","components_ShowWeatherCities_ShowWeatherCities","isCurrent","currentWeather","persistConfig","storage","persistReducer","arguments","length","undefined","action","store","createStore","combineReducers","applyMiddleware","thunk","logger","persistor","persistStore","ReactDOM","render","react_redux_es","integration_react","src_App_0","document","getElementById"],"mappings":"wOAGMA,EAAe,CACjBC,OAAQ,GACRC,WAAY,qICSVC,wLAEFC,KAAKC,MAAMC,WAAWF,KAAKC,MAAME,4CAE1B,IAAAC,EAC6BJ,KAAKC,MAA/BI,EADHD,EACGC,KAAMC,EADTF,EACSE,QAASC,EADlBH,EACkBG,OADlBC,EAEkCR,KAAKC,MAApCQ,EAFHD,EAEGC,OAAQC,EAFXF,EAEWE,OAAQC,EAFnBH,EAEmBG,WACxB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,YAAuCT,IAEzCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,SAAoCV,IAEtCO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAhB,WAAsCR,KAG1CK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcN,KAGlCG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcL,KAIhCC,EACAC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,QAAQ,YACRC,MAAM,UACNC,QAASnB,KAAKoB,YAAYC,KAAKrB,OAHjC,YASA,WA9CUsB,aA6DXC,cARS,SAAAC,GAAK,MAAK,IAEP,SAAAC,GAAQ,MAAK,CACtCvB,WAAY,SAACwB,GACXD,ECrEW,SAACC,GACZ,MAAO,CACHC,KCFsB,iBDGtBD,KAAMA,GDkEDxB,CAAWwB,OAITH,CAGbxB,8BGlDa6B,EA5BO,CACpBC,UAAW,CACTC,SAAU,SAEZC,MAAO,CACLC,SAAU,OACVd,MAAO,QAETe,MAAO,CACLC,QAAS,mBACTF,SAAU,OACVd,MAAO,QAETiB,aAAc,CACZjB,MAAO,QACPkB,WAAY,OAEdC,aAAc,CACZnB,MAAO,mBAEToB,OAAQ,CACJJ,QAAS,YACTF,SAAU,OACVO,WAAY,OACZC,UAAW,2BCNFC,EAfiB,SAACf,GAAD,OAAU,SAAAD,GAEtCiB,IAAMC,IAAN,8EAAAC,OAAwFlB,EAAKmB,OAC5FC,KAAK,SAAAC,GACFtB,EAAS,CACLE,KFPe,cEQfD,KAAKsB,OAAAC,EAAA,EAAAD,CAAA,GACED,EAAIrB,KADP,CAEAvB,UAAWuB,EAAKvB,kBCG1B+C,cACJ,SAAAA,EAAYjD,GAAO,IAAAkD,EAAA,OAAAH,OAAAI,EAAA,EAAAJ,CAAAhD,KAAAkD,IACjBC,EAAAH,OAAAK,EAAA,EAAAL,CAAAhD,KAAAgD,OAAAM,EAAA,EAAAN,CAAAE,GAAAK,KAAAvD,KAAMC,KACCuB,MAAQ,CACXgC,QAAS,IAHIL,4EAMNM,GACX,IAAMC,EAAY,4CACdC,EAAaF,EAAEG,OAAOC,OACY,IAAlCF,EAAWG,OAAOJ,GACpBD,EAAEG,OAAOC,MAAQF,EAAWI,QAAQL,EAAW,IAE/C1D,KAAKgE,SAAS,CACZR,QAASC,EAAEG,OAAOC,8CAIVJ,GACE,UAAVA,EAAEQ,KACAjE,KAAKwB,MAAMgC,QAAQU,QACrBlE,KAAKC,MAAMkE,WAAW,CACpBtB,KAAM7C,KAAKwB,MAAMgC,QACjBrD,UAAWiE,KAAKC,MAAMC,iDAKlBb,GACNzD,KAAKwB,MAAMgC,QAAQU,QACrBlE,KAAKC,MAAMkE,WAAW,CACpBtB,KAAM7C,KAAKwB,MAAMgC,QACjBrD,UAAWiE,KAAKC,MAAMC,8CAInB,IACCC,EAAYvE,KAAKC,MAAjBsE,QACR,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC0D,EAAA3D,EAAD,CACE4D,GAAG,iBACHpE,KAAK,WACLqE,YAAY,SACZ3C,MAAM,6BACN4C,WAAW,EACX5D,UAAWwD,EAAQ1C,UACnB+C,SAAU5E,KAAK6E,aAAaxD,KAAKrB,MACjC8E,WAAY9E,KAAK+E,cAAc1D,KAAKrB,MACpCgF,WAAY,CACVT,QAAS,CACPU,KAAMV,EAAQtC,MACdiD,QAASX,EAAQpC,eAGrBgD,gBAAiB,CACfZ,QAAS,CACPU,KAAMV,EAAQxC,MACdmD,QAASX,EAAQlC,iBAIvBzB,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACEI,QAAQ,YACRC,MAAM,UACNH,UAAWwD,EAAQjC,OACnBnB,QAASnB,KAAKoB,YAAYC,KAAKrB,MAC/BuE,QAAS,CACPU,KAAMV,EAAQjC,SANlB,qBAWA1B,EAAAC,EAAAC,cAAA,iCA1EcQ,aA2FPC,cAVS,SAAAC,GAAK,MAAK,IAEP,SAAAC,GACzB,MAAO,CACL0C,WAAY,SAACzC,GACXD,EAASgB,EAAiBf,OAKjBH,CAA6C6D,qBAAWxD,EAAXwD,CAAmBlC,ICnGzEmC,mLAEE,OACAzE,EAAAC,EAAAC,cAACwE,EAAA,SAAD,KAEQtF,KAAKC,MAAMJ,OAAO0F,UAAUC,IAAI,SAACC,EAAMC,GAAU,IAAAC,EACfF,EAAKG,SAA/BvF,EADyCsF,EACzCtF,KAAMC,EADmCqF,EACnCrF,QAASC,EAD0BoF,EAC1BpF,OAD0BsF,EAEtBJ,EAAKK,QAAxBrF,EAFyCoF,EAEzCpF,OAAQC,EAFiCmF,EAEjCnF,OAChB,OACIE,EAAAC,EAAAC,cAACiF,EAAD,CACI9B,IAAKyB,EACLrF,KAAMA,EACNC,QAASA,EACTC,OAAQA,EACRE,OAAQA,EACRC,OAAQA,EACRC,YAAY,EACZR,UAAWsF,EAAKtF,sBAjBRmB,aA6CjBC,cAjBS,SAAAC,GAAK,MAAK,CAC9B3B,OAAQ2B,EAAMwE,iBAAiBnG,OAAOoG,OAAO,SAAAxC,GACzC,IAAM3D,EAAa0B,EAAMwE,iBAAiBlG,WAChD,OAAIA,EACIA,EAAWoG,MAAM,SAAAC,GAAO,OAAIA,IAAY1C,EAAEtD,YAE1CsD,MAKiB,SAAAhC,GACzB,MAAO,IAKMF,CAA6C8D,GCjC/Ce,EAAoB,kBAAM,SAAA3E,GACnC,IAAM4E,EAhBU,WAChB,IAAMC,EAAcC,UAAUC,YAW9B,OAViB,IAAIC,QAAQ,SAACC,EAASC,GAC9BL,GACDK,EAAO,IAAIC,MAAM,eAErBN,EAAYO,mBAAmB,SAAAC,GAC3BJ,EAAQI,IACT,WACCH,EAAO,IAAIC,MAAM,mBAOEG,GACtBV,EAODA,EAAmBvD,KAAK,SAAAC,GACpB,IAAMiE,EAAMjE,EAAIkE,OAAOC,SACjBC,EAAOpE,EAAIkE,OAAOG,UACxB1E,IAAMC,IAAN,8EAAAC,OAAwFoE,EAAxF,KAAApE,OAA+FuE,IAC1FrE,KAAK,SAAAC,GACFtB,EAAS,CACLE,KLjCW,sBKkCXD,KAAMqB,EAAIrB,KACV2F,OAAO,QAdvB5F,EAAS,CACLE,KLnBc,aKoBdD,KAAM,KACN2F,OAAO,MCPbC,sMAEFtH,KAAKC,MAAMsH,8CAGX,GAAIvH,KAAKC,MAAMuH,QAAS,KAAAC,EACYzH,KAAKC,MAAMuH,QAAQ5B,SAA7CvF,EADcoH,EACdpH,KAAMC,EADQmH,EACRnH,QAASC,EADDkH,EACClH,OADDmH,EAEK1H,KAAKC,MAAMuH,QAAQ1B,QAAtCrF,EAFciH,EAEdjH,OAAQC,EAFMgH,EAENhH,OAChB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC6G,EAAD,MACA/G,EAAAC,EAAAC,cAAC8G,EAAD,MACAhH,EAAAC,EAAAC,cAACiF,EAAD,CACE1F,KAAMA,EACNC,QAASA,EACTC,OAAQA,EACRE,OAAQA,EACRC,OAAQA,EACRmH,WAAW,MAMrB,MAAO,UAzBOvG,cAyCHC,cAXS,SAAAC,GAAK,MAAK,CAChCgG,QAAShG,EAAMwE,iBAAiB8B,iBAEP,SAAArG,GACzB,MAAO,CACL8F,WAAY,WACV9F,EAAS2E,QAKA7E,CAA4C+F,GC1CrDS,iBAAgB,CAClB9D,IAAK,OACL+D,cAGEhC,EAAmBiC,YAAeF,EVbzB,WAAkC,IAAjCvG,EAAiC0G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBtI,EAAcyI,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7C,MGV+B,wBHU1BC,EAAO1G,KACDqB,OAAAC,EAAA,EAAAD,CAAA,GACAxB,EADP,CAEIsG,eAAgBO,EAAO3G,OGVT,eHalB2G,EAAO1G,KACAqB,OAAAC,EAAA,EAAAD,CAAA,GACAxB,EADP,CAEI6F,MAAOgB,EAAOhB,QGjBI,mBHoBtBgB,EAAO1G,KACAqB,OAAAC,EAAA,EAAAD,CAAA,GACAxB,EADP,CAEI1B,WAAY0B,EAAM1B,WAAW8C,OAAOyF,EAAO3G,QGxB5B,gBH2BlB2G,EAAO1G,KACDqB,OAAAC,EAAA,EAAAD,CAAA,GACAxB,EADP,CAEI3B,OAAQ2B,EAAM3B,OAAO+C,OAAOyF,EAAO3G,QAIpCF,IUZL8G,EAAQC,YAAYC,YAAgB,CACtCxC,qBACAyC,YACAC,IACAC,MAGAC,EAAYC,YAAaP,GAG7BQ,IAASC,OACLnI,EAAAC,EAAAC,cAACkI,EAAA,EAAD,CAAUV,MAAOA,GACb1H,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAaL,UAAWA,GACpBhI,EAAAC,EAAAC,cAACoI,EAAD,QAEKC,SAASC,eAAe","file":"static/js/main.fc272d98.chunk.js","sourcesContent":["\r\nimport { GET_CURRENT_WEATHER, GET_WEATHER, NOT_ACCESS, DELETE_WEATHER } from './../constants/actionTypes';\r\n\r\nconst initialState = {\r\n    cities: [],\r\n    timestamps: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n    \r\n    if ( action.type === GET_CURRENT_WEATHER ) {\r\n        return {\r\n            ...state,\r\n            currentWeather: action.data\r\n        }\r\n    }\r\n    if (action.type === NOT_ACCESS) {\r\n        return {\r\n            ...state, \r\n            error: action.error\r\n        }\r\n    }\r\n    if (action.type === DELETE_WEATHER) {\r\n        return {\r\n            ...state,\r\n            timestamps: state.timestamps.concat(action.data)\r\n        }\r\n    }\r\n    if ( action.type === GET_WEATHER ) {\r\n        return {\r\n            ...state,\r\n            cities: state.cities.concat(action.data),\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n","\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Material UI\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// Actions\r\n\r\nimport deleteCity from './../../actions/deleteCity';\r\n\r\n\r\n\r\nclass ShowWeather extends Component {\r\n  handleClick() {\r\n    this.props.deleteCity(this.props.timestamp);\r\n  }\r\n  render() {\r\n      const { name, country, region } = this.props;\r\n      const { temp_c, temp_f, isLocation } = this.props;\r\n      return (\r\n        <div className=\"weather__show\">\r\n          <div className=\"col\">\r\n            <h3>Location</h3>\r\n            <div className=\"row\">\r\n              <span className=\"city__info\">Country: {country}</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <span className=\"city__info\">Sity: {name}</span>\r\n            </div>\r\n            <div className=\"row\">\r\n              <span className=\"city__info\">Region: {region}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h3>Temperature C</h3>\r\n            <div className=\"row\">\r\n              <span className=\"temp__info\">{temp_c}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h3>Temperature F</h3>\r\n            <div className=\"row\">\r\n              <span className=\"temp__info\">{temp_f}</span>\r\n            </div>\r\n          </div>\r\n          {\r\n            isLocation ? (\r\n            <div className=\"col\">\r\n              <div className=\"row\">\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleClick.bind(this)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            </div>    \r\n            ) : ''\r\n          }\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteCity: (data) => {\r\n    dispatch(deleteCity(data))\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ShowWeather);\r\n","import { DELETE_WEATHER } from './../constants/actionTypes';\r\n\r\nexport default (data) => {\r\n    return {\r\n        type: DELETE_WEATHER,\r\n        data: data\r\n    }\r\n}","export const GET_CURRENT_WEATHER = 'GET_CURRENT_WEATHER';\r\nexport const GET_WEATHER = 'GET_WEATHER';\r\nexport const DELETE_WEATHER = 'DELETE_WEATHER';\r\nexport const NOT_ACCESS = 'NOT_ACCESS';\r\n;\r\n\r\nexport default {\r\n    GET_CURRENT_WEATHER,\r\n    GET_WEATHER,\r\n    DELETE_WEATHER,\r\n    NOT_ACCESS\r\n}\r\n","export const styles = {\r\n  textField: {\r\n    minWidth: \"500px\"\r\n  },\r\n  label: {\r\n    fontSize: \"18px\",\r\n    color: \"#fff\"\r\n  },\r\n  input: {\r\n    padding: \"10px 20px 10px 0\",\r\n    fontSize: \"20px\",\r\n    color: \"#fff\"\r\n  },\r\n  inputFocused: {\r\n    color: \"#fff \",\r\n    background: \"fff\"\r\n  },\r\n  labelFocused: {\r\n    color: \"#fff !important\"\r\n  },\r\n  button: {\r\n      padding: '15px 30px',\r\n      fontSize: '16px',\r\n      marginLeft: '30px',\r\n      marginTop: '20px'\r\n  }\r\n};\r\n\r\nexport default styles;\r\n","import axios from 'axios';\r\nimport { GET_WEATHER } from './../constants/actionTypes';\r\n\r\nexport const getOutherWeather = (data) => dispatch => {\r\n    \r\n    axios.get(`http://api.apixu.com/v1/current.json?key=ca628a294c8a4fc6920162818180811&q=${data.city}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_WEATHER,\r\n            data: {\r\n                ...res.data,\r\n                timestamp: data.timestamp\r\n            }\r\n        })\r\n    });\r\n    \r\n}\r\n\r\nexport default getOutherWeather;","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\n// Material UI\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport styles from \"./TextFieldStyles\";\r\n\r\n// Actions\r\n\r\nimport getOutherWeather from './../../actions/getOutherWeather';\r\n\r\nclass AddCity extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n      this.state = {\r\n        setSity: ''\r\n      }\r\n  }\r\n  handleChange(e) {\r\n    const rusRegExp = /[а-яА-ЯёЁ]/g;\r\n    let inputValue = e.target.value;\r\n    if (inputValue.search(rusRegExp) !== -1) {\r\n      e.target.value = inputValue.replace(rusRegExp, \"\");\r\n    } else {\r\n      this.setState({\r\n        setSity: e.target.value,\r\n      })\r\n    }\r\n  }\r\n  handeKeyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      if (this.state.setSity.trim()) {\r\n        this.props.addWeather({\r\n          city: this.state.setSity,\r\n          timestamp: Date.now().toString()\r\n        })\r\n      }\r\n    }\r\n  } \r\n  handleClick(e) {\r\n    if (this.state.setSity.trim()) {\r\n      this.props.addWeather({\r\n        city: this.state.setSity,\r\n        timestamp: Date.now().toString()\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"weather__add\">\r\n        <h1>Add City</h1>\r\n        <TextField\r\n          id=\"standard-dense\"\r\n          name=\"add_sity\"\r\n          placeholder=\"Moscow\"\r\n          label=\"Enter the name of the city\"\r\n          autoFocus={true}\r\n          className={classes.textField}\r\n          onChange={this.handleChange.bind(this)}\r\n          onKeyPress={this.handeKeyPress.bind(this)}\r\n          InputProps={{\r\n            classes: {\r\n              root: classes.input,\r\n              focused: classes.inputFocused\r\n            }\r\n          }}\r\n          InputLabelProps={{\r\n            classes: {\r\n              root: classes.label,\r\n              focused: classes.labelFocused\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.button}\r\n          onClick={this.handleClick.bind(this)}\r\n          classes={{\r\n            root: classes.button\r\n          }}\r\n        >\r\n          Check the weather\r\n        </Button>\r\n        <h1>Weather now</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addWeather: (data) => {\r\n      dispatch(getOutherWeather(data))\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddCity));\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ShowWeather from './../ShowWeather/ShowWeather';\r\n\r\n\r\n\r\nclass ShowWeatherCities extends Component {\r\n    render() {\r\n        return (\r\n        <Fragment>\r\n            {\r\n                this.props.cities.reverse().map((item, index) => {\r\n                const { name, country, region } = item.location;\r\n                const { temp_c, temp_f } = item.current;\r\n                return (\r\n                    <ShowWeather \r\n                        key={index}\r\n                        name={name}\r\n                        country={country}\r\n                        region={region}\r\n                        temp_c={temp_c}\r\n                        temp_f={temp_f}\r\n                        isLocation={true}\r\n                        timestamp={item.timestamp}\r\n                    />\r\n                );\r\n            })\r\n            }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    cities: state.persistedReducer.cities.filter(e => {\r\n        const timestamps = state.persistedReducer.timestamps;\r\n\t\tif (timestamps) {\r\n\t\t\treturn timestamps.every(element => element !== e.timestamp);\r\n\t\t} else {\r\n\t\t\treturn e;\r\n\t\t}\r\n\t}),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n   \r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShowWeatherCities);\r\n","import { GET_CURRENT_WEATHER, NOT_ACCESS } from './../constants/actionTypes';\r\nimport axios  from 'axios';\r\n\r\nconst getLocation = () => {\r\n    const getlocation = navigator.geolocation;\r\n    const location = new Promise((resolve, reject) => {\r\n        if (!getlocation) {\r\n            reject(new Error('Not Access'));\r\n        }\r\n        getlocation.getCurrentPosition(position => {\r\n            resolve(position);\r\n        }, () => {\r\n            reject(new Error('Not Access'));\r\n        });\r\n    });\r\n    return location;\r\n}\r\n\r\nexport const getCurrentWeather = () => dispatch => {\r\n    const getCurrentLocation = getLocation();\r\n    if (!getCurrentLocation) {\r\n        dispatch({\r\n            type: NOT_ACCESS,\r\n            data: null,\r\n            error: true,\r\n        })\r\n    } else {\r\n        getCurrentLocation.then(res => {\r\n            const lat = res.coords.latitude;\r\n            const long = res.coords.longitude;\r\n            axios.get(`http://api.apixu.com/v1/current.json?key=ca628a294c8a4fc6920162818180811&q=${lat},${long}`)\r\n                .then(res => {\r\n                    dispatch({\r\n                        type: GET_CURRENT_WEATHER,\r\n                        data: res.data,\r\n                        error: true,\r\n                    });\r\n                });\r\n        });\r\n    }\r\n}\r\n\r\nexport default getCurrentWeather;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n//  React Components\nimport ShowWeather from './components/ShowWeather/ShowWeather';\nimport AddCity from './components/AddCity/AddCity';\nimport ShowWeatherCities from './components/ShowWeatherCities/ShowWeatherCities';\n\n// Actions\n\nimport {getCurrentWeather} from './actions/getCurrentWeather';\n\n// Styles\n\nimport './App.css';\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getWeather()\n  }\n  render() {\n    if (this.props.weather) {\n      const { name, country, region } = this.props.weather.location;\n      const { temp_c, temp_f } = this.props.weather.current;\n      return (\n        <div className=\"weather\">\n          <div className=\"container\">\n            <AddCity />\n            <ShowWeatherCities />\n            <ShowWeather \n              name={name}\n              country={country}\n              region={region}\n              temp_c={temp_c}\n              temp_f={temp_f}\n              isCurrent={false}\n            />\n          </div>\n        </div>\n      );\n    }\n    return '';\n    \n  }\n}\n\nconst mapStateToProps = state => ({\n  weather: state.persistedReducer.currentWeather\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    getWeather: () => {\n      dispatch(getCurrentWeather())\n    }\n  }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport App from './App';\nimport '@babel/polyfill';\nimport './index.css';\n\n\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n  \nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nconst store = createStore(combineReducers({\n    persistedReducer\n}), applyMiddleware(\n    thunk,\n    logger\n));\n\nlet persistor = persistStore(store)\n\n\nReactDOM.render(\n    <Provider store={store} >\n        <PersistGate persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}